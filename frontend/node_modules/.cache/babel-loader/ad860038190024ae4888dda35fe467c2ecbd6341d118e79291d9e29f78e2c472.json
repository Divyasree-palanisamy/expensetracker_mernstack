{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Pictures\\\\MERN-PROJECT\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport { FiDollarSign, FiTrendingUp, FiTrendingDown, FiPieChart, FiPlus, FiCalendar, FiMapPin } from 'react-icons/fi';\nimport { Pie, Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport BudgetSuggestions from '../components/BudgetSuggestions';\nimport RecurringForecast from '../components/RecurringForecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nconst Dashboard = ({\n  onShowExpenseSplitter\n}) => {\n  _s();\n  var _summary$totalAmount;\n  const [summary, setSummary] = useState(null);\n  const [recentExpenses, setRecentExpenses] = useState([]);\n  const [recurringExpenses, setRecurringExpenses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  useEffect(() => {\n    fetchDashboardData();\n  }, [selectedMonth, selectedYear]);\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      const [summaryRes, expensesRes, recurringRes] = await Promise.all([axios.get(`/api/expenses/summary?month=${selectedMonth}&year=${selectedYear}`), axios.get('/api/expenses?limit=5&sortBy=date&sortOrder=desc'), axios.get('/api/recurring')]);\n      setSummary(summaryRes.data);\n      setRecentExpenses(expensesRes.data.expenses);\n      setRecurringExpenses(recurringRes.data);\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleApplyBudgetSuggestion = suggestion => {\n    console.log('Applying budget suggestion:', suggestion);\n    // Handle budget suggestion application\n  };\n  const getCategoryColor = category => {\n    const colors = {\n      Food: '#f59e0b',\n      Transport: '#3b82f6',\n      Entertainment: '#8b5cf6',\n      Shopping: '#10b981',\n      Bills: '#ef4444',\n      Healthcare: '#06b6d4',\n      Education: '#f97316',\n      Travel: '#84cc16',\n      Other: '#64748b'\n    };\n    return colors[category] || '#64748b';\n  };\n  const pieChartData = {\n    labels: Object.keys((summary === null || summary === void 0 ? void 0 : summary.categoryTotals) || {}),\n    datasets: [{\n      data: Object.values((summary === null || summary === void 0 ? void 0 : summary.categoryTotals) || {}),\n      backgroundColor: Object.keys((summary === null || summary === void 0 ? void 0 : summary.categoryTotals) || {}).map(getCategoryColor),\n      borderWidth: 2,\n      borderColor: '#ffffff'\n    }]\n  };\n  const lineChartData = {\n    labels: Object.keys((summary === null || summary === void 0 ? void 0 : summary.dailyTotals) || {}).map(date => format(new Date(date), 'MMM dd')),\n    datasets: [{\n      label: 'Daily Expenses',\n      data: Object.values((summary === null || summary === void 0 ? void 0 : summary.dailyTotals) || {}),\n      borderColor: '#2563eb',\n      backgroundColor: 'rgba(37, 99, 235, 0.1)',\n      tension: 0.4,\n      fill: true\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom'\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-subtitle\",\n        children: [\"Overview of your expenses for \", format(new Date(selectedYear, selectedMonth - 1), 'MMMM yyyy')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [\"RPS \", (summary === null || summary === void 0 ? void 0 : (_summary$totalAmount = summary.totalAmount) === null || _summary$totalAmount === void 0 ? void 0 : _summary$totalAmount.toFixed(2)) || '0.00']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Total Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: (summary === null || summary === void 0 ? void 0 : summary.expenseCount) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Total Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [\"RPS \", summary !== null && summary !== void 0 && summary.totalAmount ? (summary.totalAmount / summary.expenseCount).toFixed(2) : '0.00']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Average per Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [\"RPS \", summary !== null && summary !== void 0 && summary.totalAmount ? (summary.totalAmount / new Date(selectedYear, selectedMonth, 0).getDate()).toFixed(2) : '0.00']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Daily Average\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(BudgetSuggestions, {\n        expenses: recentExpenses,\n        onApplySuggestion: handleApplyBudgetSuggestion,\n        onShowExpenseSplitter: onShowExpenseSplitter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RecurringForecast, {\n        recurringExpenses: recurringExpenses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-primary mb-4 text-xl\",\n          children: \"Expenses by Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), Object.keys((summary === null || summary === void 0 ? void 0 : summary.categoryTotals) || {}).length > 0 ? /*#__PURE__*/_jsxDEV(Pie, {\n          data: pieChartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state-icon\",\n            children: \"\\uD83D\\uDCCA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No data available for the selected period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-primary mb-4 text-xl\",\n          children: \"Daily Expense Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), Object.keys((summary === null || summary === void 0 ? void 0 : summary.dailyTotals) || {}).length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n          data: lineChartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state-icon\",\n            children: \"\\uD83D\\uDCC8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No data available for the selected period\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-primary text-xl\",\n          children: \"Recent Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/expenses\",\n          className: \"btn btn-primary\",\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), \"Add Expense\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), recentExpenses.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: recentExpenses.map(expense => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expense-icon\",\n              children: getCategoryIcon(expense.category)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expense-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"expense-title\",\n                children: expense.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"expense-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"expense-category\",\n                  children: expense.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"expense-date\",\n                  children: format(new Date(expense.date), 'MMM dd, yyyy')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expense-amount\",\n            children: [\"RPS \", expense.amount.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 33\n          }, this)]\n        }, expense._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-icon\",\n          children: \"\\uD83D\\uDCDD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No expenses yet. Add your first expense to get started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"LmT/+zV54tgIJHRGA+M1PQiEUcI=\");\n_c = Dashboard;\nconst getCategoryIcon = category => {\n  const icons = {\n    'Food': '🍕',\n    'Transport': '🚗',\n    'Shopping': '🛍️',\n    'Bills': '📄',\n    'Entertainment': '🎬',\n    'Health': '💊',\n    'Education': '📚',\n    'Other': '📌'\n  };\n  return icons[category] || '📌';\n};\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","format","FiDollarSign","FiTrendingUp","FiTrendingDown","FiPieChart","FiPlus","FiCalendar","FiMapPin","Pie","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","BudgetSuggestions","RecurringForecast","jsxDEV","_jsxDEV","register","Dashboard","onShowExpenseSplitter","_s","_summary$totalAmount","summary","setSummary","recentExpenses","setRecentExpenses","recurringExpenses","setRecurringExpenses","loading","setLoading","selectedMonth","setSelectedMonth","Date","getMonth","selectedYear","setSelectedYear","getFullYear","fetchDashboardData","summaryRes","expensesRes","recurringRes","Promise","all","get","data","expenses","error","console","handleApplyBudgetSuggestion","suggestion","log","getCategoryColor","category","colors","Food","Transport","Entertainment","Shopping","Bills","Healthcare","Education","Travel","Other","pieChartData","labels","Object","keys","categoryTotals","datasets","values","backgroundColor","map","borderWidth","borderColor","lineChartData","dailyTotals","date","label","tension","fill","chartOptions","responsive","plugins","legend","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalAmount","toFixed","expenseCount","getDate","onApplySuggestion","length","options","to","expense","getCategoryIcon","description","amount","_id","_c","icons","$RefreshReg$"],"sources":["C:/Users/divya/Pictures/MERN-PROJECT/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport {\r\n    FiDollarSign,\r\n    FiTrendingUp,\r\n    FiTrendingDown,\r\n    FiPieChart,\r\n    FiPlus,\r\n    FiCalendar,\r\n    FiMapPin\r\n} from 'react-icons/fi';\r\nimport { Pie, Line } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n} from 'chart.js';\r\nimport BudgetSuggestions from '../components/BudgetSuggestions';\r\nimport RecurringForecast from '../components/RecurringForecast';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement\r\n);\r\n\r\nconst Dashboard = ({ onShowExpenseSplitter }) => {\r\n    const [summary, setSummary] = useState(null);\r\n    const [recentExpenses, setRecentExpenses] = useState([]);\r\n    const [recurringExpenses, setRecurringExpenses] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n\r\n    useEffect(() => {\r\n        fetchDashboardData();\r\n    }, [selectedMonth, selectedYear]);\r\n\r\n    const fetchDashboardData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const [summaryRes, expensesRes, recurringRes] = await Promise.all([\r\n                axios.get(`/api/expenses/summary?month=${selectedMonth}&year=${selectedYear}`),\r\n                axios.get('/api/expenses?limit=5&sortBy=date&sortOrder=desc'),\r\n                axios.get('/api/recurring')\r\n            ]);\r\n\r\n            setSummary(summaryRes.data);\r\n            setRecentExpenses(expensesRes.data.expenses);\r\n            setRecurringExpenses(recurringRes.data);\r\n        } catch (error) {\r\n            console.error('Error fetching dashboard data:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleApplyBudgetSuggestion = (suggestion) => {\r\n        console.log('Applying budget suggestion:', suggestion);\r\n        // Handle budget suggestion application\r\n    };\r\n\r\n    const getCategoryColor = (category) => {\r\n        const colors = {\r\n            Food: '#f59e0b',\r\n            Transport: '#3b82f6',\r\n            Entertainment: '#8b5cf6',\r\n            Shopping: '#10b981',\r\n            Bills: '#ef4444',\r\n            Healthcare: '#06b6d4',\r\n            Education: '#f97316',\r\n            Travel: '#84cc16',\r\n            Other: '#64748b'\r\n        };\r\n        return colors[category] || '#64748b';\r\n    };\r\n\r\n    const pieChartData = {\r\n        labels: Object.keys(summary?.categoryTotals || {}),\r\n        datasets: [\r\n            {\r\n                data: Object.values(summary?.categoryTotals || {}),\r\n                backgroundColor: Object.keys(summary?.categoryTotals || {}).map(getCategoryColor),\r\n                borderWidth: 2,\r\n                borderColor: '#ffffff'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const lineChartData = {\r\n        labels: Object.keys(summary?.dailyTotals || {}).map(date =>\r\n            format(new Date(date), 'MMM dd')\r\n        ),\r\n        datasets: [\r\n            {\r\n                label: 'Daily Expenses',\r\n                data: Object.values(summary?.dailyTotals || {}),\r\n                borderColor: '#2563eb',\r\n                backgroundColor: 'rgba(37, 99, 235, 0.1)',\r\n                tension: 0.4,\r\n                fill: true\r\n            }\r\n        ]\r\n    };\r\n\r\n    const chartOptions = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                position: 'bottom'\r\n            }\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"loading\">\r\n                    <div className=\"spinner\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"section-header\">\r\n                <h1 className=\"text-white\">Dashboard</h1>\r\n                <div className=\"section-subtitle\">\r\n                    Overview of your expenses for {format(new Date(selectedYear, selectedMonth - 1), 'MMMM yyyy')}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Stats Cards */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16\">\r\n                <div className=\"stat-card\">\r\n                    <div className=\"stat-value\">RPS {summary?.totalAmount?.toFixed(2) || '0.00'}</div>\r\n                    <div className=\"stat-label\">Total Expenses</div>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                    <div className=\"stat-value\">{summary?.expenseCount || 0}</div>\r\n                    <div className=\"stat-label\">Total Transactions</div>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                    <div className=\"stat-value\">\r\n                        RPS {summary?.totalAmount ? (summary.totalAmount / summary.expenseCount).toFixed(2) : '0.00'}\r\n                    </div>\r\n                    <div className=\"stat-label\">Average per Transaction</div>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                    <div className=\"stat-value\">\r\n                        RPS {summary?.totalAmount ? (summary.totalAmount / new Date(selectedYear, selectedMonth, 0).getDate()).toFixed(2) : '0.00'}\r\n                    </div>\r\n                    <div className=\"stat-label\">Daily Average</div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Smart Features Section */}\r\n            <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\r\n                <BudgetSuggestions\r\n                    expenses={recentExpenses}\r\n                    onApplySuggestion={handleApplyBudgetSuggestion}\r\n                    onShowExpenseSplitter={onShowExpenseSplitter}\r\n                />\r\n                <RecurringForecast\r\n                    recurringExpenses={recurringExpenses}\r\n                />\r\n            </div>\r\n\r\n            {/* Charts Section */}\r\n            <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\r\n                <div className=\"chart-container\">\r\n                    <h3 className=\"text-primary mb-4 text-xl\">Expenses by Category</h3>\r\n                    {Object.keys(summary?.categoryTotals || {}).length > 0 ? (\r\n                        <Pie data={pieChartData} options={chartOptions} />\r\n                    ) : (\r\n                        <div className=\"empty-state\">\r\n                            <div className=\"empty-state-icon\">📊</div>\r\n                            <p>No data available for the selected period</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"chart-container\">\r\n                    <h3 className=\"text-primary mb-4 text-xl\">Daily Expense Trend</h3>\r\n                    {Object.keys(summary?.dailyTotals || {}).length > 0 ? (\r\n                        <Line data={lineChartData} options={chartOptions} />\r\n                    ) : (\r\n                        <div className=\"empty-state\">\r\n                            <div className=\"empty-state-icon\">📈</div>\r\n                            <p>No data available for the selected period</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Recent Expenses */}\r\n            <div className=\"card\">\r\n                <div className=\"flex justify-between items-center mb-6\">\r\n                    <h3 className=\"text-primary text-xl\">Recent Expenses</h3>\r\n                    <Link to=\"/expenses\" className=\"btn btn-primary\">\r\n                        <FiPlus />\r\n                        Add Expense\r\n                    </Link>\r\n                </div>\r\n                {recentExpenses.length > 0 ? (\r\n                    <div className=\"list\">\r\n                        {recentExpenses.map(expense => (\r\n                            <div key={expense._id} className=\"list-item\">\r\n                                <div className=\"flex items-center\">\r\n                                    <div className=\"expense-icon\">\r\n                                        {getCategoryIcon(expense.category)}\r\n                                    </div>\r\n                                    <div className=\"expense-details\">\r\n                                        <div className=\"expense-title\">{expense.description}</div>\r\n                                        <div className=\"expense-meta\">\r\n                                            <span className=\"expense-category\">{expense.category}</span>\r\n                                            <span className=\"expense-date\">\r\n                                                {format(new Date(expense.date), 'MMM dd, yyyy')}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"expense-amount\">\r\n                                    RPS {expense.amount.toFixed(2)}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"empty-state\">\r\n                        <div className=\"empty-state-icon\">📝</div>\r\n                        <p>No expenses yet. Add your first expense to get started!</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst getCategoryIcon = (category) => {\r\n    const icons = {\r\n        'Food': '🍕',\r\n        'Transport': '🚗',\r\n        'Shopping': '🛍️',\r\n        'Bills': '📄',\r\n        'Entertainment': '🎬',\r\n        'Health': '💊',\r\n        'Education': '📚',\r\n        'Other': '📌'\r\n    };\r\n    return icons[category] || '📌';\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}