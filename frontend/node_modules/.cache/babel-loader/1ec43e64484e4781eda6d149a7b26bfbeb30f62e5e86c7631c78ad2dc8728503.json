{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Pictures\\\\MERN-PROJECT\\\\frontend\\\\src\\\\components\\\\DarkModeToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './DarkModeToggle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeToggle = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    try {\n      const saved = localStorage.getItem('darkMode');\n      if (saved === null) return true; // Default to dark mode\n      return JSON.parse(saved);\n    } catch (error) {\n      console.warn('Error parsing darkMode from localStorage:', error);\n      localStorage.removeItem('darkMode'); // Clear invalid value\n      return true; // Default to dark mode\n    }\n  });\n  useEffect(() => {\n    try {\n      localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\n      document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\n    } catch (error) {\n      console.warn('Error saving darkMode to localStorage:', error);\n    }\n  }, [isDarkMode]);\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dark-mode-toggle\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `toggle-btn ${isDarkMode ? 'dark' : 'light'}`,\n      onClick: toggleTheme,\n      \"aria-label\": `Switch to ${isDarkMode ? 'light' : 'dark'} mode`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-icon\",\n        children: isDarkMode ? 'üåô' : '‚òÄÔ∏è'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toggle-label\",\n        children: [isDarkMode ? 'Dark' : 'Light', \" Mode\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(DarkModeToggle, \"VRULz5CTMTRWkMtylfn7s6W/nx4=\");\n_c = DarkModeToggle;\nexport default DarkModeToggle;\nvar _c;\n$RefreshReg$(_c, \"DarkModeToggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DarkModeToggle","_s","isDarkMode","setIsDarkMode","saved","localStorage","getItem","JSON","parse","error","console","warn","removeItem","setItem","stringify","document","documentElement","setAttribute","toggleTheme","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/divya/Pictures/MERN-PROJECT/frontend/src/components/DarkModeToggle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './DarkModeToggle.css';\r\n\r\nconst DarkModeToggle = () => {\r\n    const [isDarkMode, setIsDarkMode] = useState(() => {\r\n        try {\r\n            const saved = localStorage.getItem('darkMode');\r\n            if (saved === null) return true; // Default to dark mode\r\n            return JSON.parse(saved);\r\n        } catch (error) {\r\n            console.warn('Error parsing darkMode from localStorage:', error);\r\n            localStorage.removeItem('darkMode'); // Clear invalid value\r\n            return true; // Default to dark mode\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        try {\r\n            localStorage.setItem('darkMode', JSON.stringify(isDarkMode));\r\n            document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\r\n        } catch (error) {\r\n            console.warn('Error saving darkMode to localStorage:', error);\r\n        }\r\n    }, [isDarkMode]);\r\n\r\n    const toggleTheme = () => {\r\n        setIsDarkMode(!isDarkMode);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dark-mode-toggle\">\r\n            <button\r\n                className={`toggle-btn ${isDarkMode ? 'dark' : 'light'}`}\r\n                onClick={toggleTheme}\r\n                aria-label={`Switch to ${isDarkMode ? 'light' : 'dark'} mode`}\r\n            >\r\n                <div className=\"toggle-icon\">\r\n                    {isDarkMode ? 'üåô' : '‚òÄÔ∏è'}\r\n                </div>\r\n                <span className=\"toggle-label\">\r\n                    {isDarkMode ? 'Dark' : 'Light'} Mode\r\n                </span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DarkModeToggle; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,MAAM;IAC/C,IAAI;MACA,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MAC9C,IAAIF,KAAK,KAAK,IAAI,EAAE,OAAO,IAAI,CAAC,CAAC;MACjC,OAAOG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC;IAC5B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACC,IAAI,CAAC,2CAA2C,EAAEF,KAAK,CAAC;MAChEJ,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;MACrC,OAAO,IAAI,CAAC,CAAC;IACjB;EACJ,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACZ,IAAI;MACAQ,YAAY,CAACQ,OAAO,CAAC,UAAU,EAAEN,IAAI,CAACO,SAAS,CAACZ,UAAU,CAAC,CAAC;MAC5Da,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEf,UAAU,GAAG,MAAM,GAAG,OAAO,CAAC;IACtF,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACC,IAAI,CAAC,wCAAwC,EAAEF,KAAK,CAAC;IACjE;EACJ,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC;EAEhB,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IACtBf,aAAa,CAAC,CAACD,UAAU,CAAC;EAC9B,CAAC;EAED,oBACIH,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7BrB,OAAA;MACIoB,SAAS,EAAE,cAAcjB,UAAU,GAAG,MAAM,GAAG,OAAO,EAAG;MACzDmB,OAAO,EAAEH,WAAY;MACrB,cAAY,aAAahB,UAAU,GAAG,OAAO,GAAG,MAAM,OAAQ;MAAAkB,QAAA,gBAE9DrB,OAAA;QAAKoB,SAAS,EAAC,aAAa;QAAAC,QAAA,EACvBlB,UAAU,GAAG,IAAI,GAAG;MAAI;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACN1B,OAAA;QAAMoB,SAAS,EAAC,cAAc;QAAAC,QAAA,GACzBlB,UAAU,GAAG,MAAM,GAAG,OAAO,EAAC,OACnC;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACxB,EAAA,CA1CID,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AA4CpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}