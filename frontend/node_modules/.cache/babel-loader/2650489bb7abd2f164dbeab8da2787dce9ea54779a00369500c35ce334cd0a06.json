{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Pictures\\\\MERN-PROJECT\\\\frontend\\\\src\\\\components\\\\ExpenseSplitter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ExpenseSplitter.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseSplitter = ({\n  isOpen,\n  onClose,\n  onSplitComplete\n}) => {\n  _s();\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [expenseDescription, setExpenseDescription] = useState('');\n  const [splitType, setSplitType] = useState('equal'); // 'equal' or 'custom'\n  const [participants, setParticipants] = useState([{\n    id: 1,\n    name: '',\n    amount: '',\n    isPayer: true\n  }]);\n  const addParticipant = () => {\n    const newId = participants.length + 1;\n    setParticipants([...participants, {\n      id: newId,\n      name: '',\n      amount: '',\n      isPayer: false\n    }]);\n  };\n  const removeParticipant = id => {\n    if (participants.length > 1) {\n      setParticipants(participants.filter(p => p.id !== id));\n    }\n  };\n  const updateParticipant = (id, field, value) => {\n    setParticipants(participants.map(p => p.id === id ? {\n      ...p,\n      [field]: value\n    } : p));\n  };\n  const setPayer = id => {\n    setParticipants(participants.map(p => ({\n      ...p,\n      isPayer: p.id === id\n    })));\n  };\n  const calculateSplit = () => {\n    if (!expenseAmount || expenseAmount <= 0) return null;\n    const totalAmount = parseFloat(expenseAmount);\n    const validParticipants = participants.filter(p => p.name.trim());\n    if (validParticipants.length === 0) return null;\n    if (splitType === 'equal') {\n      const amountPerPerson = totalAmount / validParticipants.length;\n      return validParticipants.map(p => ({\n        ...p,\n        amount: amountPerPerson.toFixed(2)\n      }));\n    } else {\n      // Custom split\n      const customAmounts = validParticipants.map(p => parseFloat(p.amount) || 0);\n      const totalCustom = customAmounts.reduce((sum, amount) => sum + amount, 0);\n      if (Math.abs(totalCustom - totalAmount) > 0.01) {\n        return null; // Amounts don't match\n      }\n      return validParticipants.map(p => ({\n        ...p,\n        amount: (parseFloat(p.amount) || 0).toFixed(2)\n      }));\n    }\n  };\n  const handleSplit = () => {\n    const splitResult = calculateSplit();\n    if (splitResult) {\n      onSplitComplete({\n        description: expenseDescription,\n        totalAmount: parseFloat(expenseAmount),\n        participants: splitResult,\n        splitType\n      });\n      onClose();\n    }\n  };\n  const splitResult = calculateSplit();\n  const isValid = splitResult && expenseDescription.trim();\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-splitter-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-splitter-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-splitter-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCB0 Split Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-splitter-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Expense Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: expenseDescription,\n              onChange: e => setExpenseDescription(e.target.value),\n              placeholder: \"e.g., Dinner, Rent, Groceries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Total Amount (RPS)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: expenseAmount,\n              onChange: e => setExpenseAmount(e.target.value),\n              placeholder: \"0.00\",\n              min: \"0\",\n              step: \"0.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"split-type-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Split Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: \"equal\",\n                  checked: splitType === 'equal',\n                  onChange: e => setSplitType(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Equal Split\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: \"custom\",\n                  checked: splitType === 'custom',\n                  onChange: e => setSplitType(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Custom Amounts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"participants-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Participants\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-participant-btn\",\n              onClick: addParticipant,\n              children: \"+ Add Person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), participants.map(participant => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"participant-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"participant-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: participant.name,\n                onChange: e => updateParticipant(participant.id, 'name', e.target.value),\n                placeholder: \"Name\",\n                className: \"name-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this), splitType === 'custom' && /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: participant.amount,\n                onChange: e => updateParticipant(participant.id, 'amount', e.target.value),\n                placeholder: \"Amount\",\n                min: \"0\",\n                step: \"0.01\",\n                className: \"amount-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"payer-checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"payer\",\n                  checked: participant.isPayer,\n                  onChange: () => setPayer(participant.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Paid\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), participants.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-btn\",\n              onClick: () => removeParticipant(participant.id),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 37\n            }, this)]\n          }, participant.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), splitResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"split-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Split Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-items\",\n            children: splitResult.map(participant => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"participant-name\",\n                children: [participant.name || `Person ${participant.id}`, participant.isPayer && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"payer-badge\",\n                  children: \"\\uD83D\\uDCB0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 69\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"amount\",\n                children: [\"RPS \", participant.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 41\n              }, this)]\n            }, participant.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-line\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Total: RPS \", expenseAmount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), splitType === 'custom' && expenseAmount && splitResult === null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: \"Custom amounts don't add up to the total. Please check your amounts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"split-expense-btn\",\n          onClick: handleSplit,\n          disabled: !isValid,\n          children: \"Split Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpenseSplitter, \"oLW8Rftk62AAY7XF0OC8pGujYYg=\");\n_c = ExpenseSplitter;\nexport default ExpenseSplitter;\nvar _c;\n$RefreshReg$(_c, \"ExpenseSplitter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseSplitter","isOpen","onClose","onSplitComplete","_s","expenseAmount","setExpenseAmount","expenseDescription","setExpenseDescription","splitType","setSplitType","participants","setParticipants","id","name","amount","isPayer","addParticipant","newId","length","removeParticipant","filter","p","updateParticipant","field","value","map","setPayer","calculateSplit","totalAmount","parseFloat","validParticipants","trim","amountPerPerson","toFixed","customAmounts","totalCustom","reduce","sum","Math","abs","handleSplit","splitResult","description","isValid","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","placeholder","min","step","checked","participant","disabled","_c","$RefreshReg$"],"sources":["C:/Users/divya/Pictures/MERN-PROJECT/frontend/src/components/ExpenseSplitter.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseSplitter.css';\r\n\r\nconst ExpenseSplitter = ({ isOpen, onClose, onSplitComplete }) => {\r\n    const [expenseAmount, setExpenseAmount] = useState('');\r\n    const [expenseDescription, setExpenseDescription] = useState('');\r\n    const [splitType, setSplitType] = useState('equal'); // 'equal' or 'custom'\r\n    const [participants, setParticipants] = useState([\r\n        { id: 1, name: '', amount: '', isPayer: true }\r\n    ]);\r\n\r\n    const addParticipant = () => {\r\n        const newId = participants.length + 1;\r\n        setParticipants([\r\n            ...participants,\r\n            { id: newId, name: '', amount: '', isPayer: false }\r\n        ]);\r\n    };\r\n\r\n    const removeParticipant = (id) => {\r\n        if (participants.length > 1) {\r\n            setParticipants(participants.filter(p => p.id !== id));\r\n        }\r\n    };\r\n\r\n    const updateParticipant = (id, field, value) => {\r\n        setParticipants(participants.map(p =>\r\n            p.id === id ? { ...p, [field]: value } : p\r\n        ));\r\n    };\r\n\r\n    const setPayer = (id) => {\r\n        setParticipants(participants.map(p => ({\r\n            ...p,\r\n            isPayer: p.id === id\r\n        })));\r\n    };\r\n\r\n    const calculateSplit = () => {\r\n        if (!expenseAmount || expenseAmount <= 0) return null;\r\n\r\n        const totalAmount = parseFloat(expenseAmount);\r\n        const validParticipants = participants.filter(p => p.name.trim());\r\n\r\n        if (validParticipants.length === 0) return null;\r\n\r\n        if (splitType === 'equal') {\r\n            const amountPerPerson = totalAmount / validParticipants.length;\r\n            return validParticipants.map(p => ({\r\n                ...p,\r\n                amount: amountPerPerson.toFixed(2)\r\n            }));\r\n        } else {\r\n            // Custom split\r\n            const customAmounts = validParticipants.map(p => parseFloat(p.amount) || 0);\r\n            const totalCustom = customAmounts.reduce((sum, amount) => sum + amount, 0);\r\n\r\n            if (Math.abs(totalCustom - totalAmount) > 0.01) {\r\n                return null; // Amounts don't match\r\n            }\r\n\r\n            return validParticipants.map(p => ({\r\n                ...p,\r\n                amount: (parseFloat(p.amount) || 0).toFixed(2)\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleSplit = () => {\r\n        const splitResult = calculateSplit();\r\n        if (splitResult) {\r\n            onSplitComplete({\r\n                description: expenseDescription,\r\n                totalAmount: parseFloat(expenseAmount),\r\n                participants: splitResult,\r\n                splitType\r\n            });\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const splitResult = calculateSplit();\r\n    const isValid = splitResult && expenseDescription.trim();\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"expense-splitter-overlay\" onClick={onClose}>\r\n            <div className=\"expense-splitter-modal\" onClick={(e) => e.stopPropagation()}>\r\n                <div className=\"expense-splitter-header\">\r\n                    <h3>💰 Split Expense</h3>\r\n                    <button className=\"close-btn\" onClick={onClose}>×</button>\r\n                </div>\r\n\r\n                <div className=\"expense-splitter-content\">\r\n                    <div className=\"expense-details\">\r\n                        <div className=\"input-group\">\r\n                            <label>Expense Description</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={expenseDescription}\r\n                                onChange={(e) => setExpenseDescription(e.target.value)}\r\n                                placeholder=\"e.g., Dinner, Rent, Groceries\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <label>Total Amount (RPS)</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={expenseAmount}\r\n                                onChange={(e) => setExpenseAmount(e.target.value)}\r\n                                placeholder=\"0.00\"\r\n                                min=\"0\"\r\n                                step=\"0.01\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"split-type-selector\">\r\n                            <label>Split Type:</label>\r\n                            <div className=\"radio-group\">\r\n                                <label className=\"radio-option\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        value=\"equal\"\r\n                                        checked={splitType === 'equal'}\r\n                                        onChange={(e) => setSplitType(e.target.value)}\r\n                                    />\r\n                                    <span>Equal Split</span>\r\n                                </label>\r\n                                <label className=\"radio-option\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        value=\"custom\"\r\n                                        checked={splitType === 'custom'}\r\n                                        onChange={(e) => setSplitType(e.target.value)}\r\n                                    />\r\n                                    <span>Custom Amounts</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"participants-section\">\r\n                        <div className=\"section-header\">\r\n                            <h4>Participants</h4>\r\n                            <button className=\"add-participant-btn\" onClick={addParticipant}>\r\n                                + Add Person\r\n                            </button>\r\n                        </div>\r\n\r\n                        {participants.map((participant) => (\r\n                            <div key={participant.id} className=\"participant-row\">\r\n                                <div className=\"participant-info\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={participant.name}\r\n                                        onChange={(e) => updateParticipant(participant.id, 'name', e.target.value)}\r\n                                        placeholder=\"Name\"\r\n                                        className=\"name-input\"\r\n                                    />\r\n\r\n                                    {splitType === 'custom' && (\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            value={participant.amount}\r\n                                            onChange={(e) => updateParticipant(participant.id, 'amount', e.target.value)}\r\n                                            placeholder=\"Amount\"\r\n                                            min=\"0\"\r\n                                            step=\"0.01\"\r\n                                            className=\"amount-input\"\r\n                                        />\r\n                                    )}\r\n\r\n                                    <label className=\"payer-checkbox\">\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"payer\"\r\n                                            checked={participant.isPayer}\r\n                                            onChange={() => setPayer(participant.id)}\r\n                                        />\r\n                                        <span>Paid</span>\r\n                                    </label>\r\n                                </div>\r\n\r\n                                {participants.length > 1 && (\r\n                                    <button\r\n                                        className=\"remove-btn\"\r\n                                        onClick={() => removeParticipant(participant.id)}\r\n                                    >\r\n                                        ×\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {splitResult && (\r\n                        <div className=\"split-summary\">\r\n                            <h4>Split Summary</h4>\r\n                            <div className=\"summary-items\">\r\n                                {splitResult.map((participant) => (\r\n                                    <div key={participant.id} className=\"summary-item\">\r\n                                        <span className=\"participant-name\">\r\n                                            {participant.name || `Person ${participant.id}`}\r\n                                            {participant.isPayer && <span className=\"payer-badge\">💰</span>}\r\n                                        </span>\r\n                                        <span className=\"amount\">RPS {participant.amount}</span>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"total-line\">\r\n                                <strong>Total: RPS {expenseAmount}</strong>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {splitType === 'custom' && expenseAmount && splitResult === null && (\r\n                        <div className=\"error-message\">\r\n                            Custom amounts don't add up to the total. Please check your amounts.\r\n                        </div>\r\n                    )}\r\n\r\n                    <button\r\n                        className=\"split-expense-btn\"\r\n                        onClick={handleSplit}\r\n                        disabled={!isValid}\r\n                    >\r\n                        Split Expense\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseSplitter; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}