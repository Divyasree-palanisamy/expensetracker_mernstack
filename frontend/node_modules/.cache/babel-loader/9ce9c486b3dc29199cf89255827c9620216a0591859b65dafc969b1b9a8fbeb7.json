{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Pictures\\\\MERN-PROJECT\\\\frontend\\\\src\\\\components\\\\BudgetSuggestions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './BudgetSuggestions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetSuggestions = ({\n  expenses,\n  onApplySuggestion\n}) => {\n  _s();\n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (expenses && expenses.length > 0) {\n      generateSuggestions();\n    }\n  }, [expenses]);\n  const generateSuggestions = () => {\n    setLoading(true);\n\n    // Simulate API call delay\n    setTimeout(() => {\n      const categoryTotals = {};\n      const categoryCounts = {};\n\n      // Calculate totals and counts for each category\n      expenses.forEach(expense => {\n        if (expense.category) {\n          categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\n          categoryCounts[expense.category] = (categoryCounts[expense.category] || 0) + 1;\n        }\n      });\n\n      // Generate suggestions based on spending patterns\n      const newSuggestions = Object.keys(categoryTotals).map(category => {\n        const total = categoryTotals[category];\n        const count = categoryCounts[category];\n        const average = total / count;\n\n        // Calculate suggested budget (average + 10% buffer)\n        const suggestedBudget = Math.round(average * 1.1);\n\n        // Determine spending trend\n        let trend = 'stable';\n        let trendColor = '#4CAF50';\n        let trendIcon = '📊';\n        if (total > average * 1.2) {\n          trend = 'increasing';\n          trendColor = '#FF9800';\n          trendIcon = '📈';\n        } else if (total < average * 0.8) {\n          trend = 'decreasing';\n          trendColor = '#2196F3';\n          trendIcon = '📉';\n        }\n        return {\n          category,\n          currentTotal: total,\n          averagePerTransaction: average,\n          suggestedBudget,\n          trend,\n          trendColor,\n          trendIcon,\n          transactionCount: count,\n          savings: suggestedBudget - total\n        };\n      });\n\n      // Sort by potential savings (highest first)\n      newSuggestions.sort((a, b) => b.savings - a.savings);\n      setSuggestions(newSuggestions);\n      setLoading(false);\n    }, 1000);\n  };\n  const handleApplySuggestion = suggestion => {\n    onApplySuggestion(suggestion);\n  };\n  const getCategoryIcon = category => {\n    const icons = {\n      'Food': '🍕',\n      'Transport': '🚗',\n      'Shopping': '🛍️',\n      'Bills': '📄',\n      'Entertainment': '🎬',\n      'Health': '💊',\n      'Education': '📚',\n      'Other': '📌'\n    };\n    return icons[category] || '📌';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-suggestions\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCA1 Smart Budget Suggestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\",\n          children: \"Loading suggestions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n  if (!suggestions || suggestions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"budget-suggestions\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCA1 Smart Budget Suggestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-data\",\n          children: \"Add some expenses to get personalized budget suggestions!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"budget-suggestions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCA1 Smart Budget Suggestions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"suggestions-subtitle\",\n        children: \"Based on your spending patterns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions-grid\",\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestion-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category-icon\",\n              children: getCategoryIcon(suggestion.category)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category-name\",\n              children: suggestion.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trend-indicator\",\n            style: {\n              color: suggestion.trendColor\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"trend-icon\",\n              children: suggestion.trendIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"trend-text\",\n              children: suggestion.trend\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Current Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [\"RPS \", suggestion.currentTotal.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Avg per Transaction:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: [\"RPS \", suggestion.averagePerTransaction.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Transactions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: suggestion.transactionCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-recommendation\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommended-budget\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"budget-label\",\n              children: \"Suggested Budget:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"budget-amount\",\n              children: [\"RPS \", suggestion.suggestedBudget]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), suggestion.savings > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"potential-savings positive\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Potential Savings: RPS \", suggestion.savings]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this), suggestion.savings < 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"potential-savings negative\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Over Budget: RPS \", Math.abs(suggestion.savings)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"apply-suggestion-btn\",\n          onClick: () => handleApplySuggestion(suggestion),\n          children: \"Apply Suggestion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this)]\n      }, suggestion.category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDCA1 These suggestions are based on your spending history and include a 10% buffer for unexpected expenses.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(BudgetSuggestions, \"SJrm5gSzMLQie88Z8vmnD8uOFSE=\");\n_c = BudgetSuggestions;\nexport default BudgetSuggestions;\nvar _c;\n$RefreshReg$(_c, \"BudgetSuggestions\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BudgetSuggestions","expenses","onApplySuggestion","_s","suggestions","setSuggestions","loading","setLoading","length","generateSuggestions","setTimeout","categoryTotals","categoryCounts","forEach","expense","category","amount","newSuggestions","Object","keys","map","total","count","average","suggestedBudget","Math","round","trend","trendColor","trendIcon","currentTotal","averagePerTransaction","transactionCount","savings","sort","a","b","handleApplySuggestion","suggestion","getCategoryIcon","icons","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","style","color","toFixed","abs","onClick","_c","$RefreshReg$"],"sources":["C:/Users/divya/Pictures/MERN-PROJECT/frontend/src/components/BudgetSuggestions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './BudgetSuggestions.css';\r\n\r\nconst BudgetSuggestions = ({ expenses, onApplySuggestion }) => {\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (expenses && expenses.length > 0) {\r\n            generateSuggestions();\r\n        }\r\n    }, [expenses]);\r\n\r\n    const generateSuggestions = () => {\r\n        setLoading(true);\r\n\r\n        // Simulate API call delay\r\n        setTimeout(() => {\r\n            const categoryTotals = {};\r\n            const categoryCounts = {};\r\n\r\n            // Calculate totals and counts for each category\r\n            expenses.forEach(expense => {\r\n                if (expense.category) {\r\n                    categoryTotals[expense.category] = (categoryTotals[expense.category] || 0) + expense.amount;\r\n                    categoryCounts[expense.category] = (categoryCounts[expense.category] || 0) + 1;\r\n                }\r\n            });\r\n\r\n            // Generate suggestions based on spending patterns\r\n            const newSuggestions = Object.keys(categoryTotals).map(category => {\r\n                const total = categoryTotals[category];\r\n                const count = categoryCounts[category];\r\n                const average = total / count;\r\n\r\n                // Calculate suggested budget (average + 10% buffer)\r\n                const suggestedBudget = Math.round(average * 1.1);\r\n\r\n                // Determine spending trend\r\n                let trend = 'stable';\r\n                let trendColor = '#4CAF50';\r\n                let trendIcon = '📊';\r\n\r\n                if (total > average * 1.2) {\r\n                    trend = 'increasing';\r\n                    trendColor = '#FF9800';\r\n                    trendIcon = '📈';\r\n                } else if (total < average * 0.8) {\r\n                    trend = 'decreasing';\r\n                    trendColor = '#2196F3';\r\n                    trendIcon = '📉';\r\n                }\r\n\r\n                return {\r\n                    category,\r\n                    currentTotal: total,\r\n                    averagePerTransaction: average,\r\n                    suggestedBudget,\r\n                    trend,\r\n                    trendColor,\r\n                    trendIcon,\r\n                    transactionCount: count,\r\n                    savings: suggestedBudget - total\r\n                };\r\n            });\r\n\r\n            // Sort by potential savings (highest first)\r\n            newSuggestions.sort((a, b) => b.savings - a.savings);\r\n\r\n            setSuggestions(newSuggestions);\r\n            setLoading(false);\r\n        }, 1000);\r\n    };\r\n\r\n    const handleApplySuggestion = (suggestion) => {\r\n        onApplySuggestion(suggestion);\r\n    };\r\n\r\n    const getCategoryIcon = (category) => {\r\n        const icons = {\r\n            'Food': '🍕',\r\n            'Transport': '🚗',\r\n            'Shopping': '🛍️',\r\n            'Bills': '📄',\r\n            'Entertainment': '🎬',\r\n            'Health': '💊',\r\n            'Education': '📚',\r\n            'Other': '📌'\r\n        };\r\n        return icons[category] || '📌';\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"budget-suggestions\">\r\n                <div className=\"suggestions-header\">\r\n                    <h3>💡 Smart Budget Suggestions</h3>\r\n                    <div className=\"loading-spinner\">Loading suggestions...</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!suggestions || suggestions.length === 0) {\r\n        return (\r\n            <div className=\"budget-suggestions\">\r\n                <div className=\"suggestions-header\">\r\n                    <h3>💡 Smart Budget Suggestions</h3>\r\n                    <p className=\"no-data\">Add some expenses to get personalized budget suggestions!</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"budget-suggestions\">\r\n            <div className=\"suggestions-header\">\r\n                <h3>💡 Smart Budget Suggestions</h3>\r\n                <p className=\"suggestions-subtitle\">Based on your spending patterns</p>\r\n            </div>\r\n\r\n            <div className=\"suggestions-grid\">\r\n                {suggestions.map((suggestion, index) => (\r\n                    <div key={suggestion.category} className=\"suggestion-card\">\r\n                        <div className=\"suggestion-header\">\r\n                            <div className=\"category-info\">\r\n                                <span className=\"category-icon\">{getCategoryIcon(suggestion.category)}</span>\r\n                                <span className=\"category-name\">{suggestion.category}</span>\r\n                            </div>\r\n                            <div className=\"trend-indicator\" style={{ color: suggestion.trendColor }}>\r\n                                <span className=\"trend-icon\">{suggestion.trendIcon}</span>\r\n                                <span className=\"trend-text\">{suggestion.trend}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"suggestion-stats\">\r\n                            <div className=\"stat-row\">\r\n                                <span className=\"stat-label\">Current Total:</span>\r\n                                <span className=\"stat-value\">RPS {suggestion.currentTotal.toFixed(2)}</span>\r\n                            </div>\r\n                            <div className=\"stat-row\">\r\n                                <span className=\"stat-label\">Avg per Transaction:</span>\r\n                                <span className=\"stat-value\">RPS {suggestion.averagePerTransaction.toFixed(2)}</span>\r\n                            </div>\r\n                            <div className=\"stat-row\">\r\n                                <span className=\"stat-label\">Transactions:</span>\r\n                                <span className=\"stat-value\">{suggestion.transactionCount}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"suggestion-recommendation\">\r\n                            <div className=\"recommended-budget\">\r\n                                <span className=\"budget-label\">Suggested Budget:</span>\r\n                                <span className=\"budget-amount\">RPS {suggestion.suggestedBudget}</span>\r\n                            </div>\r\n\r\n                            {suggestion.savings > 0 && (\r\n                                <div className=\"potential-savings positive\">\r\n                                    <span>Potential Savings: RPS {suggestion.savings}</span>\r\n                                </div>\r\n                            )}\r\n\r\n                            {suggestion.savings < 0 && (\r\n                                <div className=\"potential-savings negative\">\r\n                                    <span>Over Budget: RPS {Math.abs(suggestion.savings)}</span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <button\r\n                            className=\"apply-suggestion-btn\"\r\n                            onClick={() => handleApplySuggestion(suggestion)}\r\n                        >\r\n                            Apply Suggestion\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"suggestions-footer\">\r\n                <p>💡 These suggestions are based on your spending history and include a 10% buffer for unexpected expenses.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BudgetSuggestions; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}