{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Pictures\\\\MERN-PROJECT\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport { FiDollarSign, FiTrendingUp, FiTrendingDown, FiPieChart, FiPlus, FiCalendar, FiMapPin } from 'react-icons/fi';\nimport { Pie, Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, ArcElement);\nconst Dashboard = () => {\n  _s();\n  var _summary$totalAmount;\n  const [summary, setSummary] = useState(null);\n  const [recentExpenses, setRecentExpenses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  useEffect(() => {\n    fetchDashboardData();\n  }, [selectedMonth, selectedYear]);\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      const [summaryRes, expensesRes] = await Promise.all([axios.get(`/api/expenses/summary?month=${selectedMonth}&year=${selectedYear}`), axios.get('/api/expenses?limit=5&sortBy=date&sortOrder=desc')]);\n      setSummary(summaryRes.data);\n      setRecentExpenses(expensesRes.data.expenses);\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getCategoryColor = category => {\n    const colors = {\n      Food: '#f59e0b',\n      Transport: '#3b82f6',\n      Entertainment: '#8b5cf6',\n      Shopping: '#10b981',\n      Bills: '#ef4444',\n      Healthcare: '#06b6d4',\n      Education: '#f97316',\n      Travel: '#84cc16',\n      Other: '#64748b'\n    };\n    return colors[category] || '#64748b';\n  };\n  const pieChartData = {\n    labels: Object.keys((summary === null || summary === void 0 ? void 0 : summary.categoryTotals) || {}),\n    datasets: [{\n      data: Object.values((summary === null || summary === void 0 ? void 0 : summary.categoryTotals) || {}),\n      backgroundColor: Object.keys((summary === null || summary === void 0 ? void 0 : summary.categoryTotals) || {}).map(getCategoryColor),\n      borderWidth: 2,\n      borderColor: '#ffffff'\n    }]\n  };\n  const lineChartData = {\n    labels: Object.keys((summary === null || summary === void 0 ? void 0 : summary.dailyTotals) || {}).map(date => format(new Date(date), 'MMM dd')),\n    datasets: [{\n      label: 'Daily Expenses',\n      data: Object.values((summary === null || summary === void 0 ? void 0 : summary.dailyTotals) || {}),\n      borderColor: '#2563eb',\n      backgroundColor: 'rgba(37, 99, 235, 0.1)',\n      tension: 0.4,\n      fill: true\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom'\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"page-subtitle\",\n        children: [\"Overview of your expenses for \", format(new Date(selectedYear, selectedMonth - 1), 'MMMM yyyy')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            value: selectedMonth,\n            onChange: e => setSelectedMonth(parseInt(e.target.value)),\n            children: Array.from({\n              length: 12\n            }, (_, i) => i + 1).map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: month,\n              children: format(new Date(2024, month - 1), 'MMMM')\n            }, month, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            value: selectedYear,\n            onChange: e => setSelectedYear(parseInt(e.target.value)),\n            children: Array.from({\n              length: 5\n            }, (_, i) => new Date().getFullYear() - 2 + i).map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year,\n              children: year\n            }, year, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [\"$\", (summary === null || summary === void 0 ? void 0 : (_summary$totalAmount = summary.totalAmount) === null || _summary$totalAmount === void 0 ? void 0 : _summary$totalAmount.toFixed(2)) || '0.00']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Total Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card success\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: (summary === null || summary === void 0 ? void 0 : summary.expenseCount) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Total Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card warning\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [\"$\", summary !== null && summary !== void 0 && summary.totalAmount ? (summary.totalAmount / summary.expenseCount).toFixed(2) : '0.00']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Average per Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [\"$\", summary !== null && summary !== void 0 && summary.totalAmount ? (summary.totalAmount / new Date(selectedYear, selectedMonth, 0).getDate()).toFixed(2) : '0.00']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Daily Average\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"chart-title\",\n          children: \"Expenses by Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), Object.keys((summary === null || summary === void 0 ? void 0 : summary.categoryTotals) || {}).length > 0 ? /*#__PURE__*/_jsxDEV(Pie, {\n          data: pieChartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No expenses data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"chart-title\",\n          children: \"Daily Expenses Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), Object.keys((summary === null || summary === void 0 ? void 0 : summary.dailyTotals) || {}).length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n          data: lineChartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No daily data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recent Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/expenses/add\",\n          className: \"btn btn-primary btn-sm\",\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), \"Add Expense\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), recentExpenses.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-list\",\n        children: recentExpenses.map(expense => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expense-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expense-title\",\n              children: expense.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expense-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `expense-category category-${expense.category.toLowerCase()}`,\n                children: expense.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n                  className: \"inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 45\n                }, this), format(new Date(expense.date), 'MMM dd, yyyy')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 41\n              }, this), expense.location && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(FiMapPin, {\n                  className: \"inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 49\n                }, this), expense.location]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expense-amount\",\n            children: [\"$\", expense.amount.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }, this)]\n        }, expense._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-icon\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-title\",\n          children: \"No expenses yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state-text\",\n          children: \"Start tracking your expenses by adding your first transaction.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/expenses/add\",\n          className: \"btn btn-primary\",\n          children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this), \"Add Your First Expense\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"Q2YVLicpiWhnH13qcxv5DySoxBs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","format","FiDollarSign","FiTrendingUp","FiTrendingDown","FiPieChart","FiPlus","FiCalendar","FiMapPin","Pie","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","jsxDEV","_jsxDEV","register","Dashboard","_s","_summary$totalAmount","summary","setSummary","recentExpenses","setRecentExpenses","loading","setLoading","selectedMonth","setSelectedMonth","Date","getMonth","selectedYear","setSelectedYear","getFullYear","fetchDashboardData","summaryRes","expensesRes","Promise","all","get","data","expenses","error","console","getCategoryColor","category","colors","Food","Transport","Entertainment","Shopping","Bills","Healthcare","Education","Travel","Other","pieChartData","labels","Object","keys","categoryTotals","datasets","values","backgroundColor","map","borderWidth","borderColor","lineChartData","dailyTotals","date","label","tension","fill","chartOptions","responsive","plugins","legend","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","parseInt","target","Array","from","length","_","i","month","year","totalAmount","toFixed","expenseCount","getDate","options","to","expense","title","toLowerCase","location","amount","_id","_c","$RefreshReg$"],"sources":["C:/Users/divya/Pictures/MERN-PROJECT/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport {\r\n    FiDollarSign,\r\n    FiTrendingUp,\r\n    FiTrendingDown,\r\n    FiPieChart,\r\n    FiPlus,\r\n    FiCalendar,\r\n    FiMapPin\r\n} from 'react-icons/fi';\r\nimport { Pie, Line } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement\r\n);\r\n\r\nconst Dashboard = () => {\r\n    const [summary, setSummary] = useState(null);\r\n    const [recentExpenses, setRecentExpenses] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n\r\n    useEffect(() => {\r\n        fetchDashboardData();\r\n    }, [selectedMonth, selectedYear]);\r\n\r\n    const fetchDashboardData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const [summaryRes, expensesRes] = await Promise.all([\r\n                axios.get(`/api/expenses/summary?month=${selectedMonth}&year=${selectedYear}`),\r\n                axios.get('/api/expenses?limit=5&sortBy=date&sortOrder=desc')\r\n            ]);\r\n\r\n            setSummary(summaryRes.data);\r\n            setRecentExpenses(expensesRes.data.expenses);\r\n        } catch (error) {\r\n            console.error('Error fetching dashboard data:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const getCategoryColor = (category) => {\r\n        const colors = {\r\n            Food: '#f59e0b',\r\n            Transport: '#3b82f6',\r\n            Entertainment: '#8b5cf6',\r\n            Shopping: '#10b981',\r\n            Bills: '#ef4444',\r\n            Healthcare: '#06b6d4',\r\n            Education: '#f97316',\r\n            Travel: '#84cc16',\r\n            Other: '#64748b'\r\n        };\r\n        return colors[category] || '#64748b';\r\n    };\r\n\r\n    const pieChartData = {\r\n        labels: Object.keys(summary?.categoryTotals || {}),\r\n        datasets: [\r\n            {\r\n                data: Object.values(summary?.categoryTotals || {}),\r\n                backgroundColor: Object.keys(summary?.categoryTotals || {}).map(getCategoryColor),\r\n                borderWidth: 2,\r\n                borderColor: '#ffffff'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const lineChartData = {\r\n        labels: Object.keys(summary?.dailyTotals || {}).map(date =>\r\n            format(new Date(date), 'MMM dd')\r\n        ),\r\n        datasets: [\r\n            {\r\n                label: 'Daily Expenses',\r\n                data: Object.values(summary?.dailyTotals || {}),\r\n                borderColor: '#2563eb',\r\n                backgroundColor: 'rgba(37, 99, 235, 0.1)',\r\n                tension: 0.4,\r\n                fill: true\r\n            }\r\n        ]\r\n    };\r\n\r\n    const chartOptions = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                position: 'bottom'\r\n            }\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"loading\">\r\n                    <div className=\"spinner\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"page-header\">\r\n                <h1 className=\"page-title\">Dashboard</h1>\r\n                <p className=\"page-subtitle\">\r\n                    Overview of your expenses for {format(new Date(selectedYear, selectedMonth - 1), 'MMMM yyyy')}\r\n                </p>\r\n            </div>\r\n\r\n            {/* Month/Year Selector */}\r\n            <div className=\"filters mb-4\">\r\n                <div className=\"filters-grid\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"form-label\">Month</label>\r\n                        <select\r\n                            className=\"form-select\"\r\n                            value={selectedMonth}\r\n                            onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n                        >\r\n                            {Array.from({ length: 12 }, (_, i) => i + 1).map(month => (\r\n                                <option key={month} value={month}>\r\n                                    {format(new Date(2024, month - 1), 'MMMM')}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"form-label\">Year</label>\r\n                        <select\r\n                            className=\"form-select\"\r\n                            value={selectedYear}\r\n                            onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n                        >\r\n                            {Array.from({ length: 5 }, (_, i) => new Date().getFullYear() - 2 + i).map(year => (\r\n                                <option key={year} value={year}>{year}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Stats Cards */}\r\n            <div className=\"stats-grid\">\r\n                <div className=\"stat-card\">\r\n                    <div className=\"stat-value\">${summary?.totalAmount?.toFixed(2) || '0.00'}</div>\r\n                    <div className=\"stat-label\">Total Expenses</div>\r\n                </div>\r\n                <div className=\"stat-card success\">\r\n                    <div className=\"stat-value\">{summary?.expenseCount || 0}</div>\r\n                    <div className=\"stat-label\">Total Transactions</div>\r\n                </div>\r\n                <div className=\"stat-card warning\">\r\n                    <div className=\"stat-value\">\r\n                        ${summary?.totalAmount ? (summary.totalAmount / summary.expenseCount).toFixed(2) : '0.00'}\r\n                    </div>\r\n                    <div className=\"stat-label\">Average per Transaction</div>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                    <div className=\"stat-value\">\r\n                        ${summary?.totalAmount ? (summary.totalAmount / new Date(selectedYear, selectedMonth, 0).getDate()).toFixed(2) : '0.00'}\r\n                    </div>\r\n                    <div className=\"stat-label\">Daily Average</div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Charts Section */}\r\n            <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\r\n                <div className=\"chart-container\">\r\n                    <h3 className=\"chart-title\">Expenses by Category</h3>\r\n                    {Object.keys(summary?.categoryTotals || {}).length > 0 ? (\r\n                        <Pie data={pieChartData} options={chartOptions} />\r\n                    ) : (\r\n                        <div className=\"empty-state\">\r\n                            <p>No expenses data available</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"chart-container\">\r\n                    <h3 className=\"chart-title\">Daily Expenses Trend</h3>\r\n                    {Object.keys(summary?.dailyTotals || {}).length > 0 ? (\r\n                        <Line data={lineChartData} options={chartOptions} />\r\n                    ) : (\r\n                        <div className=\"empty-state\">\r\n                            <p>No daily data available</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Recent Expenses */}\r\n            <div className=\"card\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                    <h3>Recent Expenses</h3>\r\n                    <Link to=\"/expenses/add\" className=\"btn btn-primary btn-sm\">\r\n                        <FiPlus />\r\n                        Add Expense\r\n                    </Link>\r\n                </div>\r\n\r\n                {recentExpenses.length > 0 ? (\r\n                    <div className=\"expense-list\">\r\n                        {recentExpenses.map((expense) => (\r\n                            <div key={expense._id} className=\"expense-item\">\r\n                                <div className=\"expense-info\">\r\n                                    <div className=\"expense-title\">{expense.title}</div>\r\n                                    <div className=\"expense-meta\">\r\n                                        <span className={`expense-category category-${expense.category.toLowerCase()}`}>\r\n                                            {expense.category}\r\n                                        </span>\r\n                                        <span>\r\n                                            <FiCalendar className=\"inline mr-1\" />\r\n                                            {format(new Date(expense.date), 'MMM dd, yyyy')}\r\n                                        </span>\r\n                                        {expense.location && (\r\n                                            <span>\r\n                                                <FiMapPin className=\"inline mr-1\" />\r\n                                                {expense.location}\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"expense-amount\">${expense.amount.toFixed(2)}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"empty-state\">\r\n                        <div className=\"empty-state-icon\">📊</div>\r\n                        <div className=\"empty-state-title\">No expenses yet</div>\r\n                        <div className=\"empty-state-text\">\r\n                            Start tracking your expenses by adding your first transaction.\r\n                        </div>\r\n                        <Link to=\"/expenses/add\" className=\"btn btn-primary\">\r\n                            <FiPlus />\r\n                            Add Your First Expense\r\n                        </Link>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}