{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Pictures\\\\MERN-PROJECT\\\\frontend\\\\src\\\\pages\\\\Categories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport { FiPieChart, FiBarChart2, FiCalendar } from 'react-icons/fi';\nimport { Pie, Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement);\nconst Categories = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [categoryExpenses, setCategoryExpenses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  useEffect(() => {\n    fetchCategories();\n  }, [selectedMonth, selectedYear]);\n  useEffect(() => {\n    if (selectedCategory) {\n      fetchCategoryExpenses();\n    }\n  }, [selectedCategory, selectedMonth, selectedYear]);\n  const fetchCategories = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/categories?month=${selectedMonth}&year=${selectedYear}`);\n      setCategories(response.data);\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCategoryExpenses = async () => {\n    try {\n      const response = await axios.get(`/api/categories/${selectedCategory}?month=${selectedMonth}&year=${selectedYear}`);\n      setCategoryExpenses(response.data.expenses);\n    } catch (error) {\n      console.error('Error fetching category expenses:', error);\n    }\n  };\n  const getCategoryColor = category => {\n    const colors = {\n      Food: '#f59e0b',\n      Transport: '#3b82f6',\n      Entertainment: '#8b5cf6',\n      Shopping: '#10b981',\n      Bills: '#ef4444',\n      Healthcare: '#06b6d4',\n      Education: '#f97316',\n      Travel: '#84cc16',\n      Other: '#64748b'\n    };\n    return colors[category] || '#64748b';\n  };\n  const pieChartData = {\n    labels: categories.map(cat => cat.name),\n    datasets: [{\n      data: categories.map(cat => cat.totalAmount),\n      backgroundColor: categories.map(cat => getCategoryColor(cat.name)),\n      borderWidth: 2,\n      borderColor: '#ffffff'\n    }]\n  };\n  const barChartData = {\n    labels: categories.map(cat => cat.name),\n    datasets: [{\n      label: 'Amount',\n      data: categories.map(cat => cat.totalAmount),\n      backgroundColor: categories.map(cat => getCategoryColor(cat.name)),\n      borderColor: categories.map(cat => getCategoryColor(cat.name)),\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'bottom'\n      }\n    }\n  };\n  const totalAmount = categories.reduce((sum, cat) => sum + cat.totalAmount, 0);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Expense Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"page-subtitle\",\n        children: [\"Breakdown of your expenses by category for \", format(new Date(selectedYear, selectedMonth - 1), 'MMMM yyyy')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            value: selectedMonth,\n            onChange: e => setSelectedMonth(parseInt(e.target.value)),\n            children: Array.from({\n              length: 12\n            }, (_, i) => i + 1).map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: month,\n              children: format(new Date(2024, month - 1), 'MMMM')\n            }, month, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            value: selectedYear,\n            onChange: e => setSelectedYear(parseInt(e.target.value)),\n            children: Array.from({\n              length: 5\n            }, (_, i) => new Date().getFullYear() - 2 + i).map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year,\n              children: year\n            }, year, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-grid mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [\"$\", totalAmount.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Total Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: categories.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Categories Used\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: [\"$\", totalAmount ? (totalAmount / categories.length).toFixed(2) : '0.00']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Average per Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-value\",\n          children: categories.length > 0 ? categories.reduce((sum, cat) => sum + cat.count, 0) : 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"Total Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"chart-title\",\n          children: [/*#__PURE__*/_jsxDEV(FiPieChart, {\n            className: \"inline mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), \"Category Distribution\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), categories.length > 0 ? /*#__PURE__*/_jsxDEV(Pie, {\n          data: pieChartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No category data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"chart-title\",\n          children: [/*#__PURE__*/_jsxDEV(FiBarChart3, {\n            className: \"inline mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), \"Category Comparison\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), categories.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n          data: barChartData,\n          options: chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No category data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\",\n      children: categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card cursor-pointer transition-all hover:shadow-md ${selectedCategory === category.name ? 'ring-2 ring-primary-color' : ''}`,\n        onClick: () => setSelectedCategory(category.name),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-semibold\",\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"px-2 py-1 rounded-full text-xs font-medium\",\n            style: {\n              backgroundColor: getCategoryColor(category.name) + '20',\n              color: getCategoryColor(category.name)\n            },\n            children: [category.percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold mb-1\",\n          children: [\"$\", category.totalAmount.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [category.count, \" transaction\", category.count !== 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this)]\n      }, category.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), selectedCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: [selectedCategory, \" Expenses\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedCategory(null),\n          className: \"btn btn-outline btn-sm\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this), categoryExpenses.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-list\",\n        children: categoryExpenses.map(expense => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expense-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expense-title\",\n              children: expense.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expense-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n                  className: \"inline mr-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 49\n                }, this), format(new Date(expense.date), 'MMM dd, yyyy')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 45\n              }, this), expense.description && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: expense.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expense-amount\",\n            children: [\"$\", expense.amount.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 37\n          }, this)]\n        }, expense._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No expenses found for this category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n_s(Categories, \"xIq2l3Dc7WfeJC3unb2KuvaPTTs=\");\n_c = Categories;\nexport default Categories;\nvar _c;\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"names":["React","useState","useEffect","axios","format","FiPieChart","FiBarChart2","FiCalendar","Pie","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","jsxDEV","_jsxDEV","register","Categories","_s","categories","setCategories","selectedCategory","setSelectedCategory","categoryExpenses","setCategoryExpenses","loading","setLoading","selectedMonth","setSelectedMonth","Date","getMonth","selectedYear","setSelectedYear","getFullYear","fetchCategories","fetchCategoryExpenses","response","get","data","error","console","expenses","getCategoryColor","category","colors","Food","Transport","Entertainment","Shopping","Bills","Healthcare","Education","Travel","Other","pieChartData","labels","map","cat","name","datasets","totalAmount","backgroundColor","borderWidth","borderColor","barChartData","label","chartOptions","responsive","plugins","legend","position","reduce","sum","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","parseInt","target","Array","from","length","_","i","month","year","toFixed","count","options","FiBarChart3","onClick","style","color","percentage","expense","title","date","description","amount","_id","_c","$RefreshReg$"],"sources":["C:/Users/divya/Pictures/MERN-PROJECT/frontend/src/pages/Categories.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport { FiPieChart, FiBarChart2, FiCalendar } from 'react-icons/fi';\r\nimport { Pie, Bar } from 'react-chartjs-2';\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement\r\n);\r\n\r\nconst Categories = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState(null);\r\n    const [categoryExpenses, setCategoryExpenses] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\r\n    const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, [selectedMonth, selectedYear]);\r\n\r\n    useEffect(() => {\r\n        if (selectedCategory) {\r\n            fetchCategoryExpenses();\r\n        }\r\n    }, [selectedCategory, selectedMonth, selectedYear]);\r\n\r\n    const fetchCategories = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.get(`/api/categories?month=${selectedMonth}&year=${selectedYear}`);\r\n            setCategories(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching categories:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchCategoryExpenses = async () => {\r\n        try {\r\n            const response = await axios.get(`/api/categories/${selectedCategory}?month=${selectedMonth}&year=${selectedYear}`);\r\n            setCategoryExpenses(response.data.expenses);\r\n        } catch (error) {\r\n            console.error('Error fetching category expenses:', error);\r\n        }\r\n    };\r\n\r\n    const getCategoryColor = (category) => {\r\n        const colors = {\r\n            Food: '#f59e0b',\r\n            Transport: '#3b82f6',\r\n            Entertainment: '#8b5cf6',\r\n            Shopping: '#10b981',\r\n            Bills: '#ef4444',\r\n            Healthcare: '#06b6d4',\r\n            Education: '#f97316',\r\n            Travel: '#84cc16',\r\n            Other: '#64748b'\r\n        };\r\n        return colors[category] || '#64748b';\r\n    };\r\n\r\n    const pieChartData = {\r\n        labels: categories.map(cat => cat.name),\r\n        datasets: [\r\n            {\r\n                data: categories.map(cat => cat.totalAmount),\r\n                backgroundColor: categories.map(cat => getCategoryColor(cat.name)),\r\n                borderWidth: 2,\r\n                borderColor: '#ffffff'\r\n            }\r\n        ]\r\n    };\r\n\r\n    const barChartData = {\r\n        labels: categories.map(cat => cat.name),\r\n        datasets: [\r\n            {\r\n                label: 'Amount',\r\n                data: categories.map(cat => cat.totalAmount),\r\n                backgroundColor: categories.map(cat => getCategoryColor(cat.name)),\r\n                borderColor: categories.map(cat => getCategoryColor(cat.name)),\r\n                borderWidth: 1\r\n            }\r\n        ]\r\n    };\r\n\r\n    const chartOptions = {\r\n        responsive: true,\r\n        plugins: {\r\n            legend: {\r\n                position: 'bottom'\r\n            }\r\n        }\r\n    };\r\n\r\n    const totalAmount = categories.reduce((sum, cat) => sum + cat.totalAmount, 0);\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"loading\">\r\n                    <div className=\"spinner\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"page-header\">\r\n                <h1 className=\"page-title\">Expense Categories</h1>\r\n                <p className=\"page-subtitle\">\r\n                    Breakdown of your expenses by category for {format(new Date(selectedYear, selectedMonth - 1), 'MMMM yyyy')}\r\n                </p>\r\n            </div>\r\n\r\n            {/* Month/Year Selector */}\r\n            <div className=\"filters mb-4\">\r\n                <div className=\"filters-grid\">\r\n                    <div className=\"form-group\">\r\n                        <label className=\"form-label\">Month</label>\r\n                        <select\r\n                            className=\"form-select\"\r\n                            value={selectedMonth}\r\n                            onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n                        >\r\n                            {Array.from({ length: 12 }, (_, i) => i + 1).map(month => (\r\n                                <option key={month} value={month}>\r\n                                    {format(new Date(2024, month - 1), 'MMMM')}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"form-label\">Year</label>\r\n                        <select\r\n                            className=\"form-select\"\r\n                            value={selectedYear}\r\n                            onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n                        >\r\n                            {Array.from({ length: 5 }, (_, i) => new Date().getFullYear() - 2 + i).map(year => (\r\n                                <option key={year} value={year}>{year}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Summary Stats */}\r\n            <div className=\"stats-grid mb-6\">\r\n                <div className=\"stat-card\">\r\n                    <div className=\"stat-value\">${totalAmount.toFixed(2)}</div>\r\n                    <div className=\"stat-label\">Total Expenses</div>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                    <div className=\"stat-value\">{categories.length}</div>\r\n                    <div className=\"stat-label\">Categories Used</div>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                    <div className=\"stat-value\">\r\n                        ${totalAmount ? (totalAmount / categories.length).toFixed(2) : '0.00'}\r\n                    </div>\r\n                    <div className=\"stat-label\">Average per Category</div>\r\n                </div>\r\n                <div className=\"stat-card\">\r\n                    <div className=\"stat-value\">\r\n                        {categories.length > 0 ? categories.reduce((sum, cat) => sum + cat.count, 0) : 0}\r\n                    </div>\r\n                    <div className=\"stat-label\">Total Transactions</div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Charts */}\r\n            <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\r\n                <div className=\"chart-container\">\r\n                    <h3 className=\"chart-title\">\r\n                        <FiPieChart className=\"inline mr-2\" />\r\n                        Category Distribution\r\n                    </h3>\r\n                    {categories.length > 0 ? (\r\n                        <Pie data={pieChartData} options={chartOptions} />\r\n                    ) : (\r\n                        <div className=\"empty-state\">\r\n                            <p>No category data available</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"chart-container\">\r\n                    <h3 className=\"chart-title\">\r\n                        <FiBarChart3 className=\"inline mr-2\" />\r\n                        Category Comparison\r\n                    </h3>\r\n                    {categories.length > 0 ? (\r\n                        <Bar data={barChartData} options={chartOptions} />\r\n                    ) : (\r\n                        <div className=\"empty-state\">\r\n                            <p>No category data available</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Categories List */}\r\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6\">\r\n                {categories.map((category) => (\r\n                    <div\r\n                        key={category.name}\r\n                        className={`card cursor-pointer transition-all hover:shadow-md ${selectedCategory === category.name ? 'ring-2 ring-primary-color' : ''\r\n                            }`}\r\n                        onClick={() => setSelectedCategory(category.name)}\r\n                    >\r\n                        <div className=\"flex items-center justify-between mb-2\">\r\n                            <h3 className=\"font-semibold\">{category.name}</h3>\r\n                            <span\r\n                                className=\"px-2 py-1 rounded-full text-xs font-medium\"\r\n                                style={{\r\n                                    backgroundColor: getCategoryColor(category.name) + '20',\r\n                                    color: getCategoryColor(category.name)\r\n                                }}\r\n                            >\r\n                                {category.percentage}%\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"text-2xl font-bold mb-1\">\r\n                            ${category.totalAmount.toFixed(2)}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-600\">\r\n                            {category.count} transaction{category.count !== 1 ? 's' : ''}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Category Details */}\r\n            {selectedCategory && (\r\n                <div className=\"card\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        <h3 className=\"text-lg font-semibold\">\r\n                            {selectedCategory} Expenses\r\n                        </h3>\r\n                        <button\r\n                            onClick={() => setSelectedCategory(null)}\r\n                            className=\"btn btn-outline btn-sm\"\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n\r\n                    {categoryExpenses.length > 0 ? (\r\n                        <div className=\"expense-list\">\r\n                            {categoryExpenses.map((expense) => (\r\n                                <div key={expense._id} className=\"expense-item\">\r\n                                    <div className=\"expense-info\">\r\n                                        <div className=\"expense-title\">{expense.title}</div>\r\n                                        <div className=\"expense-meta\">\r\n                                            <span>\r\n                                                <FiCalendar className=\"inline mr-1\" />\r\n                                                {format(new Date(expense.date), 'MMM dd, yyyy')}\r\n                                            </span>\r\n                                            {expense.description && (\r\n                                                <span className=\"text-gray-600\">{expense.description}</span>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"expense-amount\">${expense.amount.toFixed(2)}</div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"empty-state\">\r\n                            <p>No expenses found for this category</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Categories; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}