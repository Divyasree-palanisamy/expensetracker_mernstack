{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\Pictures\\\\MERN-PROJECT\\\\frontend\\\\src\\\\components\\\\RecurringForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './RecurringForecast.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecurringForecast = ({\n  recurringExpenses\n}) => {\n  _s();\n  var _Object$entries$sort$;\n  const [forecast, setForecast] = useState(null);\n  const [selectedPeriod, setSelectedPeriod] = useState('next-month');\n  useEffect(() => {\n    if (recurringExpenses && recurringExpenses.length > 0) {\n      calculateForecast();\n    }\n  }, [recurringExpenses, selectedPeriod]);\n  const calculateForecast = () => {\n    const now = new Date();\n    let targetDate = new Date();\n    switch (selectedPeriod) {\n      case 'next-month':\n        targetDate.setMonth(targetDate.getMonth() + 1);\n        break;\n      case 'next-3-months':\n        targetDate.setMonth(targetDate.getMonth() + 3);\n        break;\n      case 'next-6-months':\n        targetDate.setMonth(targetDate.getMonth() + 6);\n        break;\n      default:\n        targetDate.setMonth(targetDate.getMonth() + 1);\n    }\n    const forecastData = {\n      period: selectedPeriod,\n      targetDate: targetDate,\n      totalForecast: 0,\n      categoryBreakdown: {},\n      upcomingExpenses: [],\n      savingsOpportunity: 0\n    };\n    recurringExpenses.forEach(expense => {\n      if (expense.isActive) {\n        const nextDueDate = new Date(expense.nextDueDate);\n        const amount = parseFloat(expense.amount);\n\n        // Calculate how many times this expense will occur in the forecast period\n        let occurrences = 0;\n        let currentDate = new Date(nextDueDate);\n        while (currentDate <= targetDate) {\n          occurrences++;\n\n          // Add to upcoming expenses if within next 30 days\n          if (currentDate <= new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000)) {\n            forecastData.upcomingExpenses.push({\n              ...expense,\n              dueDate: new Date(currentDate),\n              amount: amount\n            });\n          }\n\n          // Calculate next occurrence based on frequency\n          switch (expense.frequency) {\n            case 'daily':\n              currentDate.setDate(currentDate.getDate() + 1);\n              break;\n            case 'weekly':\n              currentDate.setDate(currentDate.getDate() + 7);\n              break;\n            case 'monthly':\n              currentDate.setMonth(currentDate.getMonth() + 1);\n              break;\n            case 'yearly':\n              currentDate.setFullYear(currentDate.getFullYear() + 1);\n              break;\n            default:\n              currentDate.setMonth(currentDate.getMonth() + 1);\n          }\n        }\n        const totalForExpense = amount * occurrences;\n        forecastData.totalForecast += totalForExpense;\n\n        // Add to category breakdown\n        if (forecastData.categoryBreakdown[expense.category]) {\n          forecastData.categoryBreakdown[expense.category] += totalForExpense;\n        } else {\n          forecastData.categoryBreakdown[expense.category] = totalForExpense;\n        }\n      }\n    });\n\n    // Sort upcoming expenses by due date\n    forecastData.upcomingExpenses.sort((a, b) => a.dueDate - b.dueDate);\n\n    // Calculate potential savings (assuming 10% reduction opportunity)\n    forecastData.savingsOpportunity = forecastData.totalForecast * 0.1;\n    setForecast(forecastData);\n  };\n  const getPeriodLabel = () => {\n    switch (selectedPeriod) {\n      case 'next-month':\n        return 'Next Month';\n      case 'next-3-months':\n        return 'Next 3 Months';\n      case 'next-6-months':\n        return 'Next 6 Months';\n      default:\n        return 'Next Month';\n    }\n  };\n  const formatDate = date => {\n    return new Date(date).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  };\n  const getCategoryIcon = category => {\n    const icons = {\n      'Food': '🍕',\n      'Transport': '🚗',\n      'Shopping': '🛍️',\n      'Bills': '📄',\n      'Entertainment': '🎬',\n      'Health': '💊',\n      'Education': '📚',\n      'Other': '📌'\n    };\n    return icons[category] || '📌';\n  };\n  if (!recurringExpenses || recurringExpenses.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recurring-forecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC5 Recurring Expense Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-data\",\n          children: \"Add some recurring expenses to see your forecast!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recurring-forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCC5 Recurring Expense Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"period-selector\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedPeriod,\n          onChange: e => setSelectedPeriod(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"next-month\",\n            children: \"Next Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"next-3-months\",\n            children: \"Next 3 Months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"next-6-months\",\n            children: \"Next 6 Months\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), forecast && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card total-forecast\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-icon\",\n            children: \"\\uD83D\\uDCB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Total Forecast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"summary-amount\",\n              children: [\"RPS \", forecast.totalForecast.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"summary-period\",\n              children: getPeriodLabel()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card savings-opportunity\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-icon\",\n            children: \"\\uD83D\\uDCA1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Potential Savings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"summary-amount\",\n              children: [\"RPS \", forecast.savingsOpportunity.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"summary-period\",\n              children: \"10% reduction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-card upcoming-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-icon\",\n            children: \"\\u23F0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Upcoming (30 days)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"summary-amount\",\n              children: forecast.upcomingExpenses.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"summary-period\",\n              children: \"expenses due\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-breakdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Category Breakdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"breakdown-list\",\n            children: Object.entries(forecast.categoryBreakdown).sort(([, a], [, b]) => b - a).map(([category, amount]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"breakdown-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-icon\",\n                  children: getCategoryIcon(category)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-name\",\n                  children: category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"category-amount\",\n                children: [\"RPS \", amount.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 45\n              }, this)]\n            }, category, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upcoming-expenses\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Upcoming Expenses (Next 30 Days)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), forecast.upcomingExpenses.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upcoming-list\",\n            children: [forecast.upcomingExpenses.slice(0, 5).map((expense, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upcoming-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"expense-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"expense-icon\",\n                  children: getCategoryIcon(expense.category)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"expense-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"expense-name\",\n                    children: expense.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"expense-date\",\n                    children: [\"Due: \", formatDate(expense.dueDate)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"expense-amount\",\n                children: [\"RPS \", expense.amount.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 45\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 41\n            }, this)), forecast.upcomingExpenses.length > 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"more-expenses\",\n              children: [\"+\", forecast.upcomingExpenses.length - 5, \" more expenses\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-upcoming\",\n            children: \"No expenses due in the next 30 days\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-insights\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCA1 Insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"insights-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"insight-icon\",\n              children: \"\\uD83D\\uDCCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Your largest recurring expense category is \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: ((_Object$entries$sort$ = Object.entries(forecast.categoryBreakdown).sort(([, a], [, b]) => b - a)[0]) === null || _Object$entries$sort$ === void 0 ? void 0 : _Object$entries$sort$[0]) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 82\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"insight-icon\",\n              children: \"\\uD83D\\uDCB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"You could save \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"RPS \", forecast.savingsOpportunity.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 54\n              }, this), \" by reducing expenses by 10%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"insight-icon\",\n              children: \"\\uD83D\\uDCC5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Plan ahead for \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: forecast.upcomingExpenses.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 54\n              }, this), \" expenses in the next 30 days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_s(RecurringForecast, \"kj2NHHGWICkEOa875cBteTjr7xI=\");\n_c = RecurringForecast;\nexport default RecurringForecast;\nvar _c;\n$RefreshReg$(_c, \"RecurringForecast\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","RecurringForecast","recurringExpenses","_s","_Object$entries$sort$","forecast","setForecast","selectedPeriod","setSelectedPeriod","length","calculateForecast","now","Date","targetDate","setMonth","getMonth","forecastData","period","totalForecast","categoryBreakdown","upcomingExpenses","savingsOpportunity","forEach","expense","isActive","nextDueDate","amount","parseFloat","occurrences","currentDate","getTime","push","dueDate","frequency","setDate","getDate","setFullYear","getFullYear","totalForExpense","category","sort","a","b","getPeriodLabel","formatDate","date","toLocaleDateString","month","day","year","getCategoryIcon","icons","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","toFixed","Object","entries","map","slice","index","description","_c","$RefreshReg$"],"sources":["C:/Users/divya/Pictures/MERN-PROJECT/frontend/src/components/RecurringForecast.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './RecurringForecast.css';\r\n\r\nconst RecurringForecast = ({ recurringExpenses }) => {\r\n    const [forecast, setForecast] = useState(null);\r\n    const [selectedPeriod, setSelectedPeriod] = useState('next-month');\r\n\r\n    useEffect(() => {\r\n        if (recurringExpenses && recurringExpenses.length > 0) {\r\n            calculateForecast();\r\n        }\r\n    }, [recurringExpenses, selectedPeriod]);\r\n\r\n    const calculateForecast = () => {\r\n        const now = new Date();\r\n        let targetDate = new Date();\r\n\r\n        switch (selectedPeriod) {\r\n            case 'next-month':\r\n                targetDate.setMonth(targetDate.getMonth() + 1);\r\n                break;\r\n            case 'next-3-months':\r\n                targetDate.setMonth(targetDate.getMonth() + 3);\r\n                break;\r\n            case 'next-6-months':\r\n                targetDate.setMonth(targetDate.getMonth() + 6);\r\n                break;\r\n            default:\r\n                targetDate.setMonth(targetDate.getMonth() + 1);\r\n        }\r\n\r\n        const forecastData = {\r\n            period: selectedPeriod,\r\n            targetDate: targetDate,\r\n            totalForecast: 0,\r\n            categoryBreakdown: {},\r\n            upcomingExpenses: [],\r\n            savingsOpportunity: 0\r\n        };\r\n\r\n        recurringExpenses.forEach(expense => {\r\n            if (expense.isActive) {\r\n                const nextDueDate = new Date(expense.nextDueDate);\r\n                const amount = parseFloat(expense.amount);\r\n\r\n                // Calculate how many times this expense will occur in the forecast period\r\n                let occurrences = 0;\r\n                let currentDate = new Date(nextDueDate);\r\n\r\n                while (currentDate <= targetDate) {\r\n                    occurrences++;\r\n\r\n                    // Add to upcoming expenses if within next 30 days\r\n                    if (currentDate <= new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000)) {\r\n                        forecastData.upcomingExpenses.push({\r\n                            ...expense,\r\n                            dueDate: new Date(currentDate),\r\n                            amount: amount\r\n                        });\r\n                    }\r\n\r\n                    // Calculate next occurrence based on frequency\r\n                    switch (expense.frequency) {\r\n                        case 'daily':\r\n                            currentDate.setDate(currentDate.getDate() + 1);\r\n                            break;\r\n                        case 'weekly':\r\n                            currentDate.setDate(currentDate.getDate() + 7);\r\n                            break;\r\n                        case 'monthly':\r\n                            currentDate.setMonth(currentDate.getMonth() + 1);\r\n                            break;\r\n                        case 'yearly':\r\n                            currentDate.setFullYear(currentDate.getFullYear() + 1);\r\n                            break;\r\n                        default:\r\n                            currentDate.setMonth(currentDate.getMonth() + 1);\r\n                    }\r\n                }\r\n\r\n                const totalForExpense = amount * occurrences;\r\n                forecastData.totalForecast += totalForExpense;\r\n\r\n                // Add to category breakdown\r\n                if (forecastData.categoryBreakdown[expense.category]) {\r\n                    forecastData.categoryBreakdown[expense.category] += totalForExpense;\r\n                } else {\r\n                    forecastData.categoryBreakdown[expense.category] = totalForExpense;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Sort upcoming expenses by due date\r\n        forecastData.upcomingExpenses.sort((a, b) => a.dueDate - b.dueDate);\r\n\r\n        // Calculate potential savings (assuming 10% reduction opportunity)\r\n        forecastData.savingsOpportunity = forecastData.totalForecast * 0.1;\r\n\r\n        setForecast(forecastData);\r\n    };\r\n\r\n    const getPeriodLabel = () => {\r\n        switch (selectedPeriod) {\r\n            case 'next-month':\r\n                return 'Next Month';\r\n            case 'next-3-months':\r\n                return 'Next 3 Months';\r\n            case 'next-6-months':\r\n                return 'Next 6 Months';\r\n            default:\r\n                return 'Next Month';\r\n        }\r\n    };\r\n\r\n    const formatDate = (date) => {\r\n        return new Date(date).toLocaleDateString('en-US', {\r\n            month: 'short',\r\n            day: 'numeric',\r\n            year: 'numeric'\r\n        });\r\n    };\r\n\r\n    const getCategoryIcon = (category) => {\r\n        const icons = {\r\n            'Food': '🍕',\r\n            'Transport': '🚗',\r\n            'Shopping': '🛍️',\r\n            'Bills': '📄',\r\n            'Entertainment': '🎬',\r\n            'Health': '💊',\r\n            'Education': '📚',\r\n            'Other': '📌'\r\n        };\r\n        return icons[category] || '📌';\r\n    };\r\n\r\n    if (!recurringExpenses || recurringExpenses.length === 0) {\r\n        return (\r\n            <div className=\"recurring-forecast\">\r\n                <div className=\"forecast-header\">\r\n                    <h3>📅 Recurring Expense Forecast</h3>\r\n                    <p className=\"no-data\">Add some recurring expenses to see your forecast!</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"recurring-forecast\">\r\n            <div className=\"forecast-header\">\r\n                <h3>📅 Recurring Expense Forecast</h3>\r\n                <div className=\"period-selector\">\r\n                    <select\r\n                        value={selectedPeriod}\r\n                        onChange={(e) => setSelectedPeriod(e.target.value)}\r\n                    >\r\n                        <option value=\"next-month\">Next Month</option>\r\n                        <option value=\"next-3-months\">Next 3 Months</option>\r\n                        <option value=\"next-6-months\">Next 6 Months</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            {forecast && (\r\n                <>\r\n                    <div className=\"forecast-summary\">\r\n                        <div className=\"summary-card total-forecast\">\r\n                            <div className=\"summary-icon\">💰</div>\r\n                            <div className=\"summary-content\">\r\n                                <h4>Total Forecast</h4>\r\n                                <p className=\"summary-amount\">RPS {forecast.totalForecast.toFixed(2)}</p>\r\n                                <span className=\"summary-period\">{getPeriodLabel()}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"summary-card savings-opportunity\">\r\n                            <div className=\"summary-icon\">💡</div>\r\n                            <div className=\"summary-content\">\r\n                                <h4>Potential Savings</h4>\r\n                                <p className=\"summary-amount\">RPS {forecast.savingsOpportunity.toFixed(2)}</p>\r\n                                <span className=\"summary-period\">10% reduction</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"summary-card upcoming-count\">\r\n                            <div className=\"summary-icon\">⏰</div>\r\n                            <div className=\"summary-content\">\r\n                                <h4>Upcoming (30 days)</h4>\r\n                                <p className=\"summary-amount\">{forecast.upcomingExpenses.length}</p>\r\n                                <span className=\"summary-period\">expenses due</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"forecast-details\">\r\n                        <div className=\"category-breakdown\">\r\n                            <h4>Category Breakdown</h4>\r\n                            <div className=\"breakdown-list\">\r\n                                {Object.entries(forecast.categoryBreakdown)\r\n                                    .sort(([, a], [, b]) => b - a)\r\n                                    .map(([category, amount]) => (\r\n                                        <div key={category} className=\"breakdown-item\">\r\n                                            <div className=\"category-info\">\r\n                                                <span className=\"category-icon\">{getCategoryIcon(category)}</span>\r\n                                                <span className=\"category-name\">{category}</span>\r\n                                            </div>\r\n                                            <span className=\"category-amount\">RPS {amount.toFixed(2)}</span>\r\n                                        </div>\r\n                                    ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"upcoming-expenses\">\r\n                            <h4>Upcoming Expenses (Next 30 Days)</h4>\r\n                            {forecast.upcomingExpenses.length > 0 ? (\r\n                                <div className=\"upcoming-list\">\r\n                                    {forecast.upcomingExpenses.slice(0, 5).map((expense, index) => (\r\n                                        <div key={index} className=\"upcoming-item\">\r\n                                            <div className=\"expense-info\">\r\n                                                <span className=\"expense-icon\">{getCategoryIcon(expense.category)}</span>\r\n                                                <div className=\"expense-details\">\r\n                                                    <span className=\"expense-name\">{expense.description}</span>\r\n                                                    <span className=\"expense-date\">Due: {formatDate(expense.dueDate)}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <span className=\"expense-amount\">RPS {expense.amount.toFixed(2)}</span>\r\n                                        </div>\r\n                                    ))}\r\n                                    {forecast.upcomingExpenses.length > 5 && (\r\n                                        <div className=\"more-expenses\">\r\n                                            +{forecast.upcomingExpenses.length - 5} more expenses\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ) : (\r\n                                <p className=\"no-upcoming\">No expenses due in the next 30 days</p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"forecast-insights\">\r\n                        <h4>💡 Insights</h4>\r\n                        <div className=\"insights-list\">\r\n                            <div className=\"insight-item\">\r\n                                <span className=\"insight-icon\">📊</span>\r\n                                <span>Your largest recurring expense category is <strong>{Object.entries(forecast.categoryBreakdown).sort(([, a], [, b]) => b - a)[0]?.[0] || 'N/A'}</strong></span>\r\n                            </div>\r\n                            <div className=\"insight-item\">\r\n                                <span className=\"insight-icon\">💰</span>\r\n                                <span>You could save <strong>RPS {forecast.savingsOpportunity.toFixed(2)}</strong> by reducing expenses by 10%</span>\r\n                            </div>\r\n                            <div className=\"insight-item\">\r\n                                <span className=\"insight-icon\">📅</span>\r\n                                <span>Plan ahead for <strong>{forecast.upcomingExpenses.length}</strong> expenses in the next 30 days</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecurringForecast; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}